ezmlm(5)                                                              ezmlm(5)



NNAAMMEE
       ezmlm - format of ezmlm directory

OOVVEERRVVIIEEWW
       An  eezzmmllmm  directory,  _d_i_r,  stores  information about an eezzmmllmm mailing
       list.  eezzmmllmm--mmaakkee creates _d_i_r along with the files necessary to support
       the other programs; eezzmmllmm--ssuubb and eezzmmllmm--uunnssuubb manipulate the subscriber
       list(s) stored under _d_i_r;  eezzmmllmm--lliisstt  lists  the  subscriber  list(s);
       eezzmmllmm--mmaannaaggee  handles administrative requests automatically; eezzmmllmm--sseenndd
       sends a message to all subscribers listed in _d_i_r and also  maintains  a
       message  archive and message subject index if the list is configured to
       do so.  eezzmmllmm--rreejjeecctt rejects messages that that are unsuitable for dis‐
       tribution to the mailing list; eezzmmllmm--rreettuurrnn handles bounces; eezzmmllmm--wweeeedd
       weeds out useless messages; eezzmmllmm--wwaarrnn warns users for  which  messages
       bounce and eventually removes them from the subscriber list.  eezzmmllmm--iiddxx
       can create a subject index from an existing list  archive,  and  eezzmmllmm--
       aarrcchhiivvee  creates and updates thread and author indices for the archive.
       eezzmmllmm--ggeett  manages  message,  index,  and  thread  retrieval  from  the
       archive,  as well as the generation of message digests; eezzmmllmm--ccrroonn pro‐
       vides a restricted interface to cron for the generation of digest  gen‐
       eration  trigger  messages;  eezzmmllmm--ssttoorree  queues  messages of moderated
       lists and sends a moderation request to the moderator(s);  eezzmmllmm--mmooddeerr‐‐
       aattee  processes  moderation requests to accept the queued message to the
       list via eezzmmllmm--sseenndd or to return the message to the sender;  eezzmmllmm--ccoonn‐‐
       ffiirrmm does similar for user confirmation requests; eezzmmllmm--cclleeaann cleans up
       the moderation queue and returns to the sender any messages  that  have
       timed-out;  eezzmmllmm--ggaattee  posts  messages  that  come from a SENDER in an
       address database, and sends  remaining  messages  out  for  moderation;
       eezzmmllmm--cchheecckk  is  used to diagnose problems with ezmlm mailing list con‐
       figuration; eezzmmllmm--cchheecckkssuubb and eezzmmllmm--iissssuubbnn determine if a SENDER is  a
       subscriber  or  a  member  of  a  collection of addresses; eezzmmllmm--ttssttddiigg
       determines if it is time to create a new digest based on the number and
       volume  of  messages  and  the amount of time that has passed since the
       last digest was issued; eezzmmllmm--rreeqquueesstt can be used to answer eezzmmllmm  com‐
       mands in the subject line easing migration from other mailing list man‐
       agers. It can also function as a global interface mimicking the  inter‐
       face of other mailing list manager.  eezzmmllmm--ggllmmaakkee can set up the global
       interface, and eezzmmllmm--ggllccoonnff can create a  configuration  file  for  the
       global interface from your lists.

SSUUBBSSCCRRIIBBEERRSS
       _d_i_r//ssuubbssccrriibbeerrss  is a directory containing the subscriber list.  eezzmmllmm--
       mmaannaaggee allows automatic subscription if _d_i_r//ppuubblliicc exists.

       The list is hashed into 53 files, named @@ through tt in ASCII.  A nonex‐
       istent file is treated as an empty file.

       Each file contains a series of addresses.  An address can be any string
       of non-NUL characters up to 400 bytes long.  Each address  is  preceded
       by the letter T and followed by a NUL.

       For  reliability, when an address is added to or removed from the mail‐
       ing list, the relevant file is recreated under a temporary name  inside
       _d_i_r//ssuubbssccrriibbeerrss and then moved into place.

       _d_i_r//ssuubbddbb  contains  subscriber  database  access information for lists
       that are configured to use an alternate database plugin (such as  mysql
       or   pgsql)   for  storage  of  mailing  lists.   Its  format  is  _p_l_u_‐
       _g_i_n_:_h_o_s_t_:_p_o_r_t_:_u_s_e_r_:_p_a_s_s_w_o_r_d_:_d_a_t_a_b_a_s_e_:_t_a_b_l_e.   The  database  and  table
       names  both  default to _m_y_s_q_l.  If this file does not exist but _d_i_r//ssqqll
       exists, its contents are used with a plugin name of _s_q_l.   If  no  such
       file exists, the standard lists stored in _d_i_r//ssuubbssccrriibbeerrss etc are used.

AARRCCHHIIVVEE
       _d_i_r//aarrcchhiivvee is a directory containing messages previously sent to  sub‐
       scribers.  eezzmmllmm--sseenndd archives all new messages if _d_i_r//aarrcchhiivveedd exists.
       If _d_i_r//iinnddeexxeedd exists, eezzmmllmm--sseenndd also maintains a message subject  and
       author index.

       Messages  sent to the mailing list are numbered from 1 upwards, whether
       or not they are archived.  _d_i_r//nnuumm is the number of  messages  sent  so
       far  followed by ’:’, followed by the cumulative amount of message body
       that has passed eezzmmllmm--sseenndd stored as kbytes * 4 (4 corresponds to 1kb).

       _d_i_r//aarrcchhiivvee  has  subdirectories,  each  subdirectory storing up to 100
       messages.  Message number 100m+n, with n between 0 and 99, is stored in
       _d_i_r//aarrcchhiivvee//_m//_n.   For  example,  message  number  15307  is  stored in
       _d_i_r//aarrcchhiivvee//115533//0077.  The message index is stored in the file  iinnddeexx  in
       the  same  subdirectory  of  _d_i_r//aarrcchhiivvee holding the corresponding mes‐
       sages.  Thus, the subject index contains up to 100 entries.

       The subject index contains message subjects that are normalized so that
       the  original  message and all replies have the same entry. The subject
       index is used for advanced message retrieval functions. For safety, the
       subject  index is created under a temporary name inside _d_i_r//aarrcchhiivvee and
       then moved into place.

       eezzmmllmm--mmaannaaggee will ignore message files without  the  owner-execute  bit
       set.   eezzmmllmm--sseenndd  turns  on the owner-execute bit after safely writing
       the message to disk.

       eezzmmllmm--mmaakkee by default adds eezzmmllmm--ggeett to  _d_i_r//mmaannaaggeerr  to  handle  _-_g_e_t_,
       _-_i_n_d_e_x_,  and  _-_t_h_r_e_a_d requests. If eezzmmllmm--mmaakkee is invoked with a _d_i_g_e_s_t_‐
       _c_o_d_e command line argument, digest creation is enabled by putting  this
       argument into the _d_i_r//ddiiggeessttccooddee file.

BBOOUUNNCCEESS
       _d_i_r//bboouunnccee  is  a  directory  containing bounce messages.  eezzmmllmm--rreettuurrnn
       stores several types of files here.

DDEELLIIVVEERRYY IINNSSTTRRUUCCTTIIOONNSS
       eezzmmllmm--mmaakkee sets up four files to control mailing list deliveries.  Each
       file is a series of delivery instructions in ddoott--qqmmaaiill format.

       _d_i_r//eeddiittoorr  handles incoming mailing list submissions.  eezzmmllmm--mmaakkee sets
       up _d_i_r//eeddiittoorr to invoke eezzmmllmm--sseenndd to immediately forward each  message
       to all subscribers and then to run eezzmmllmm--wwaarrnn.

       _d_i_r//oowwnneerr  handles  incoming  messages  for  the  mailing list’s owner.
       eezzmmllmm--mmaakkee sets up _d_i_r//oowwnneerr to store messages in _d_i_r//MMaaiillbbooxx and  then
       to run eezzmmllmm--wwaarrnn.

       _d_i_r//bboouunncceerr  handles  incoming  bounce  messages.   eezzmmllmm--mmaakkee  sets up
       _d_i_r//bboouunncceerr to invoke eezzmmllmm--rreettuurrnn.  eezzmmllmm--wwaarrnn is  no  longer  invoked
       here  due  to  the load it places on systems with many large lists with
       many bounces.

       _d_i_r//ccoonnffiirrmmeerr handles incoming message _c_o_n_f_i_r_m and _d_i_s_c_a_r_d requests for
       sender  confirmed  lists.   eezzmmllmm--mmaakkee  sets up _d_i_r//ccoonnffiirrmmeerr to invoke
       eezzmmllmm--ccoonnffiirrmm, eezzmmllmm--aarrcchhiivvee, and then eezzmmllmm--cclleeaann.

       _d_i_r//mmaannaaggeerr handles incoming administrative requests.  eezzmmllmm--mmaakkee  sets
       up  _d_i_r//mmaannaaggeerr  to  invoke eezzmmllmm--ggeett, eezzmmllmm--mmaannaaggee, eezzmmllmm--rreeqquueesstt, and
       then eezzmmllmm--wwaarrnn.

       _d_i_r//mmooddeerraattoorr handles incoming message _a_c_c_e_p_t and _r_e_j_e_c_t  requests  for
       moderated  lists.   eezzmmllmm--mmaakkee  sets  up _d_i_r//mmooddeerraattoorr to invoke eezzmmllmm--
       wweeeedd, eezzmmllmm--mmooddeerraattee, eezzmmllmm--aarrcchhiivvee, and eezzmmllmm--cclleeaann.

DDIIGGEESSTTSS
       eezzmmllmm--ggeett can create digests if it is invoked from  the  command  line,
       from  _d_i_r//eeddiittoorr,  or  from  _d_i_r//mmaannaaggeerr.   The  program  functions  in
       slightly different ways in these 3 settings (see eezzmmllmm--ggeett((11))).

       To enable automatic digests for a mailing list, use the  eezzmmllmm--mmaakkee  --dd
       switch  or  create the _d_i_r//ddiiggeesstteedd file. To also enable the generation
       of digests at specific times dictated by  mailed  trigger  messages,  a
       _d_i_g_e_s_t_c_o_d_e should be specified in the _d_i_r//ddiiggeessttccooddee file.  This can be
       done by specifying _d_i_g_e_s_t_c_o_d_e as a fifth argument  to  eezzmmllmm--mmaakkee  when
       setting  up  the  list.   _d_i_g_e_s_t_c_o_d_e  must be alphanumeric and is case-
       insensitive.

       To generate trigger messages, use  eezzmmllmm--ccrroonn((11))  as  an  interface  to
       ccrroonndd((88)) or use ccrroonndd directly.

       eezzmmllmm--ggeett is able to create digests with a variety of different formats
       which may be specified on the command line for eezzmmllmm--ggeett or in the file
       _d_i_r//ddiiggffoorrmmaatt.

       _d_i_r//nnuumm  contains  the  number  of the last message processed by eezzmmllmm--
       sseenndd, followed by ’:’ and a number that is increased by 1 for each  256
       bytes  of  message  body  text  processed. The latter number is used by
       eezzmmllmm--ttssttddiigg to determine if a new digest is due.

       _d_i_r//ddiiggnnuumm contains the contents of _d_i_r//nnuumm at the  time  of  the  last
       regular  digest  creation,  followed by a ’:’, followed by a timestamp.
       It is updated after each regular digest is sent.

       _d_i_r//ddiiggiissssuuee contains the issue number of the last regular  digest.  It
       is incremented for each regular digest sent.

       The  following  user crontab entry (all on one line) generates a digest
       of the list _l_i_s_t_@_h_o_s_t_._d_o_m_a_i_n at 1600 every day:

         00 16 * * * /var/qmail/bin/qmail-inject list-dig.digestcode

       Alternatively, eezzmmllmm--ccrroonn can be used:

         % ezmlm-cron -t 16:00 list@host digestcode

       eezzmmllmm--ggeett can also be run from the shell: To generate a digest to _l_i_s_t_-
       _d_i_g_e_s_t_@_h_o_s_t from the list housed in _~_j_o_e_/_l_i_s_t:

         % ezmlm-get ~joe/list

       Like  other  eezzmmllmm--ggeett  replies, digest can be sent in several formats.
       See eezzmmllmm--ggeett((11)) for more info.

MMOODDEERRAATTIIOONN
       There are four aspects of  moderation:  sender  confirmation  of  posts
       (also known as "user confirmation" or "self moderation"), moderation of
       posts, moderation of subscriptions, and "remote  administration",  i.e.
       giving  the  moderator the right to (un)subscribe any user.  eezzmmllmm han‐
       dles these four aspects separately. The  first  three  aspects  enhance
       security, while the last decreases security, but makes list administra‐
       tion considerably easier. By default, the  moderator  database  is  the
       same  for  all  three functions. While "remote administration" and sub‐
       scription moderation always use the same database, the  moderators  for
       message moderation can be different.

       Even  with subscription moderation, the user has to verify the request.
       This is to ensure that the user initiating the request really  controls
       the address.  eezzmmllmm--mmaannaaggee options exist to disable the user handshake,
       which may be useful in some circumstances.

       For standard moderation options, the moderators are by stored in a sub‐
       scriber list in _m_o_d_d_i_r//ssuubbssccrriibbeerrss.  By default _m_o_d_d_i_r is _d_i_r//mmoodd.

       Moderators can be added and removed with:

       eezzmmllmm--ssuubb _d_i_r mmoodd _m_o_d_e_r_a_t_o_r_@_h_o_s_t

       eezzmmllmm--uunnssuubb _d_i_r mmoodd _m_o_d_e_r_a_t_o_r_@_h_o_s_t

       For  subscription  moderation,  touch  _d_i_r//mmooddssuubb  after adding modera‐
       tor(s).  For remote administration, touch _d_i_r//rreemmoottee.  If the  contents
       of  these  files contain a subdirectory name, it is used as the name of
       the mmoodd address list directory for subscription  moderation.   If  both
       files  exist  and  contain a subdirectory name, the _d_i_r//rreemmoottee contents
       are ignored. Moderator addresses are stored as indicated  in  the  SUB‐
       SCRIBERS  section  above.   If  no  directory  names are specified, the
       default, _d_i_r//mmoodd, is used.  In all cases,  the  named  subscriber  list
       must exist.

       Sender confirmation is achieved by creating _d_i_r//ccoonnffiirrmmppoosstt and modera‐
       tion of posts is achieved by creating  _d_i_r//mmooddppoosstt.   In  either  case,
       modify  _d_i_r//eeddiittoorr  to  invoke  eezzmmllmm--ssttoorree.   For sender confirmation,
       eezzmmllmm--ssttoorree stores the message in _d_i_r//mmoodd//uunnccoonnffiirrmmeedd and sends a  con‐
       firmation  request  to  the sender.  For moderation, eezzmmllmm--ssttoorree stores
       the message in _d_i_r//mmoodd//ppeennddiinngg and sends a moderation  request  to  all
       moderators stored in _m_o_d.  If moderation is enabled and _d_i_r//mmooddppoossttoonnllyy
       exists, messages from non-moderators are rejected.

       If neither _d_i_r//ccoonnffiirrmmppoosstt nor  _d_i_r//mmooddppoosstt  exist,  eezzmmllmm--ssttoorree  posts
       messages directly (via eezzmmllmm--sseenndd), and eezzmmllmm--cclleeaann does nothing.

       If  _d_i_r//mmooddppoosstt  contains a subdirectory name this directory is used as
       the _m_o_d subscriber list for message moderation.  Moderators are  stored
       in a subscriber list according to the SUBSCRIBERS section above.  If no
       directory names are specified, the default, _d_i_r//mmoodd, is used.

       _d_i_r//ccoonnffiirrmmeerr is linked to _d_o_t--ccoonnffiirrmm--ddeeffaauulltt and _d_i_r--ddiissccaarrdd--ddeeffaauulltt.
       It handles replies for sender confirmation.  _d_i_r//mmooddeerraattoorr is linked to
       _d_o_t--aacccceepptt--ddeeffaauulltt and _d_o_t--rreejjeecctt--ddeeffaauulltt.  It handles replies from the
       moderators.

       In  addition  to  a  moderator  list, the directories _d_i_r//mmoodd//aacccceepptteedd,
       _d_i_r//mmoodd//ppeennddiinngg, _d_i_r//mmoodd//rreejjeecctteedd, and _d_i_r//mmoodd//uunnccoonnffiirrmmeedd must  exist.
       These directories contain the message moderation queue.

       If  _d_i_r//mmoodd//mmooddttiimmee  it  determines the minimal time in hours that mes‐
       sages wait in the moderation queue, before they are returned to  sender
       with the message in _d_i_r//tteexxtt//mmoodd--ttiimmeeoouutt.

       If a _-_h_e_l_p command is sent for a moderator and _d_i_r//mmooddssuubb or _d_i_r//rreemmoottee
       exist, a more detailed help message stored in _d_i_r//tteexxtt//mmoodd--hheellpp will be
       sent  together  with  the  regular  help.  This text should not contain
       secrets.  If _d_i_r//tteexxtt//mmoodd--hheellpp does not exist,  _d_i_r//tteexxtt//hheellpp  will  be
       sent.

       If a _-_l_i_s_t command is sent for a moderator and _d_i_r//mmooddssuubb or _d_i_r//rreemmoottee
       exist, and either the _d_i_r//mmooddccaannlliisstt file exists or the eezzmmllmm--mmaannaaggee --ll
       command line switch is specified, a subscriber list will be returned.

       If  an _-_e_d_i_t_._f_i_l_e command is sent for a moderator and _d_i_r//rreemmoottee exist,
       and either the _d_i_r//mmooddccaanneeddiitt file exists or the eezzmmllmm--mmaannaaggee --dd or  --ee
       command  line  switches  are  specified, tteexxtt//ffiillee is returned together
       with an eezzmmllmm cookie. The remote administrator  may  return  an  edited
       version  of the file, which will be stored, provided that the cookie is
       valid.  See eezzmmllmm--mmaannaaggee((11)) for more info.

TTEEXXTT
       _t_e_x_t is a directory containing files sent out in messages generated  by
       eezzmmllmm  in  response  to  administrative  requests.   These files may be
       located in one of three locations: in the _d_i_r//tteexxtt  directory;  in  the
       alternate   directory   _l_a_n_g//tteexxtt;   or   in   the   default  directory
       //eettcc//eezzmmllmm//ddeeffaauulltt//tteexxtt.  The _l_a_n_g parameter in the second path is  the
       contents  of  the _d_i_r//eezzmmllmmrrcc file, which is created by _e_z_m_l_m_-_m_a_k_e.  By
       default, _e_z_m_l_m_-_m_a_k_e does not install any of these text files into  _d_i_r.
       Instead,  it  relies  on  the use of the alternate and default paths to
       look up text messages.

   TTEEXXTT FFIILLEESS
       ttoopp            Introducing eezzmmllmm.  This is placed at the  top  of  each
                      response.

       bboottttoomm         Explaining how to use eezzmmllmm.  This is placed at the bot‐
                      tom of each response.

       ssuubb--ccoonnffiirrmm    Explaining how to confirm a subscription request.

       ssuubb--ookk         Acknowledging successful subscription.

       ssuubb--nnoopp        Acknowledging a  subscription  request  for  an  address
                      already on the mailing list.

       ssuubb--bbaadd        Rejecting a bad subscription confirmation number.

       uunnssuubb--ccoonnffiirrmm  Explaining how to confirm an unsubscription request, and
                      explaining how to figure out the subscription address.

       uunnssuubb--ookk       Acknowledging successful unsubscription.

       uunnssuubb--nnoopp      Acknowledging an unsubscription request for  an  address
                      not on the mailing list.

       uunnssuubb--bbaadd      Rejecting a bad unsubscription confirmation number.

       ggeett--bbaadd        Rejecting a bad archive retrieval request.

       ddiiggeesstt         Text  copied  into  the  _A_d_m_i_n_i_s_t_r_a_t_i_v_i_a  section of the
                      digest. Usually, this will contain subscription info for
                      the digest, as well as information on how to post to the
                      list.

       ttrraaiilleerr        If this files exists, it is copied to  the  end  of  all
                      messages to the list.

       ffaaqq            Sent  in  response  to the _f_a_q command. Usually contains
                      frequently asked questions and answers specific for  the
                      mailing list.

       iinnffoo           Sent in response to the _i_n_f_o command. Usually contains a
                      descripition, policy, etc, for the list. The first  line
                      should  in  itself  be  a  very brief description of the
                      list.

       hheellpp           General help in response to a misdirected or  misspelled
                      request.

       bboouunnccee--wwaarrnn    Pointing out that messages have bounced.

       bboouunnccee--pprroobbee   Pointing out that a warning message has bounced.

       bboouunnccee--nnuumm     Explaining  that eezzmmllmm--rreettuurrnn has kept a list of bounced
                      message numbers.

       ddiigg--bboouunnccee--nnuumm Explaining that digest messages have bounced. All  other
                      text  files  are  used  for  both  the main list and the
                      digest list.

       bboouunnccee--bboottttoomm  Separating the bounce message.

       mmoodd--hheellpp       is set to list moderators issuing a  _-_h_e_l_p  command.  It
                      contains  instructions  for  moderators, but it is rela‐
                      tively trivial for a non-moderator to read it. Don’t put
                      secrets here.

       mmoodd--rreejjeecctt     is the returned to the sender of a rejected post.

       mmoodd--ttiimmeeoouutt    is  returned  if the message timed-out without moderator
                      action.

       mmoodd--ssuubb        is added to the text confirming subscription and  unsub‐
                      scription  instead of bboottttoomm and the requesting message,
                      for actions that were approved by a moderator. Not copy‐
                      ing  the requesting message hides the moderator identity
                      from the subscriber.

       mmoodd--rreeqquueesstt    is the text sent to the moderators to request  moderator
                      action on a posted message.

       mmoodd--ssuubb--ccoonnffiirrmm
                      Requesting  that the moderator confirm a request to sub‐
                      scribe.  If this file does not exist,  ssuubb--ccoonnffiirrmm  will
                      be used.

       mmoodd--uunnssuubb--ccoonnffiirrmm
                      Requesting  that  the  moderator  confirm  a  request to
                      unsubscribe.  If this file does not exist, uunnssuubb--ccoonnffiirrmm
                      will be used.

       ppoosstt--ccoonnffiirrmm   Requesting  that  the sender confirms that a posted mes‐
                      sage did originate from them.

       eeddiitt--ddoo        Instructions sent to the remote  administrator  together
                      with a copy of a _d_i_r//tteexxtt file and editing instructions.

       eeddiitt--lliisstt      A list of editable files in  _d_i_r//tteexxtt  with  a  one-line
                      description  send  to a remote administrator in response
                      to a _-_e_d_i_t command.

       eeddiitt--ddoonnee      Sent  to  the  remote  administrator  after  an   edited
                      _d_i_r//tteexxtt file has been successfully saved.

   SSUUBBSSTTIITTUUTTIIOONNSS
       Several  tags  in  the text files are replaced by ezmlm programs.  Tags
       may appear anywhere on a line and multiple tags may appear on the  same
       line.

       <<##LL##>>  The unmodified name of the list, as defined by _d_i_r//oouuttllooccaall

       <<##ll##>>  The  name of the list or the list-digest, as appropriate for the
              request.  The use of <<##ll##>> is to allow the same text file to  be
              used  for  requests  pertaining  to  both  the main list and the
              digest list.

       <<##HH##>>  The hostname for the list, as defined by _d_i_r//oouutthhoosstt

       <<##hh##>>  The hostname for the list

       <<##nn##>>  The current message number in eezzmmllmm--sseenndd, and the number of  the
              first message in the digest in eezzmmllmm--ggeett

       <<##AA##>>  The   moderation   accept  or  (un)subscription  target  address
              (described below)

       <<##aa##>>  The local part of the moderation accept address

       <<##tt##>>  The subscription target address, with "@" replaced with "="

       <<##RR##>>  The  moderation  reject  or   (un)subscription   reply   address
              (described below), equivalent to <<##rr##>>@@<<##hh##>>

       <<##rr##>>  The  local  part  of  the reject or reply address, equivalent to
              <<##ll##>>--<<##cc##>>

       <<##cc##>>  The cryptographic "cookie" in the reject or reply address

       <<##dd##>>  _d_i_r

       The subscription target address is the address that has requested  sub‐
       scription to or unsubscription from the list in eezzmmllmm--mmaannaaggee.  The same
       tag is used in eezzmmllmm--ssttoorree for the address to which  a  reply  must  be
       sent to accept the original post.

       The  subscription reply address is the address to which a reply must be
       sent to confirm a subscription in eezzmmllmm--mmaannaaggee.  The same tag  is  used
       in  eezzmmllmm--ssttoorree  for the address to which a reply may be sent to reject
       the original post.

       For backwards compatibility, the lines !!AA and !!RR are replaced with  the
       value of <<##AA##>> and <<##RR##>> respectively.

   TTEEXXTT//MMEESSSSAAGGEESS
       One of the _t_e_x_t files, tteexxtt//mmeessssaaggeess, has special handling.  It is used
       when creating short messages within the eezzmmllmm programs, such  as  error
       messages,  subject  lines,  and several others.  Each line of this file
       contains a message name and the contents of that message, separated  by
       a  colon.   Individual  messages  are  loaded  from all three locations
       described above instead of just the first file that is found,  allowing
       for partial sets of customizations.  Additionally, the programs have an
       internal table of messages as a final fallback.

       In addition to the substitions listed above,  the  tags  <<##11##>>  through
       <<##99##>>  are used by certain messages for file names and other parameters
       specific    to    the    message.     The    default    messages     in
       //eettcc//eezzmmllmm//ddeeffaauulltt//tteexxtt//mmeessssaaggeess should have a complete set of messages
       with all parameters used.

OOUUTTGGOOIINNGG MMEESSSSAAGGEE EEDDIITTIINNGG
       _d_i_r//hheeaaddeerrkkeeeepp is a list of good header field names, one per line,  and
       _d_i_r//hheeaaddeerrrreemmoovvee  is  a list of bad header field names.  If _d_i_r//hheeaaddeerr‐‐
       kkeeeepp is present, eezzmmllmm--sseenndd removes all header fields  but  those  that
       are  listed  from  outgoing  messages; otherwise eezzmmllmm--sseenndd removes the
       header fields listed in _d_i_r//hheeaaddeerrrreemmoovvee from  all  outgoing  messages.
       eezzmmllmm--mmaakkee  sets  up  _d_i_r//hheeaaddeerrrreemmoovvee  to  remove RReettuurrnn--PPaatthh, RReettuurrnn--
       RReecceeiipptt--TToo, and RReettuurrnn--PPaatthh fields.

       _d_i_r//hheeaaddeerraadddd is a list of new header fields.   eezzmmllmm--sseenndd  adds  these
       fields  to every outgoing message.  eezzmmllmm--sseenndd sets up _d_i_r//hheeaaddeerraadddd to
       add XX--NNoo--AArrcchhiivvee:: yyeess and PPrreecceeddeennccee::bulk..

       If dir//hheeaaddeerrrreejjeecctt eexxiissttss,, aanndd tthhee eezzmmllmm--rreejjeecctt _d_i_r argument is speci‐
       fied, messages containing any of the listed headers are rejected.

       If dir//mmiimmeekkeeeepp eexxiissttss,, eezzmmllmm--sseenndd removes parts except those with cor‐
       responding content-types from composite MIME messages.   Otherwise,  if
       _d_i_r//mmiimmeerreemmoovvee  exists, eezzmmllmm--sseenndd removes parts with the corresponding
       content-types. If the eezzmmllmm--rreejjeecctt _d_i_r argument is specified,  messages
       consisting only of disallowed content-types are rejected.

       If  _d_i_r//mmiimmeerreejjeecctt  exists, and the eezzmmllmm--rreejjeecctt _d_i_r argument is speci‐
       fied, simple MIME messages of these content-types,  or  composite  MIME
       messages with any body part of these content-types are rejected.

       If _d_i_r//sseeqquueennccee exists, the first line is added as a header to all out‐
       going messages, followed by a space and the message number. The message
       number is useful for archive retrievals, since some mail systems do not
       reveal the return-path to the user.  NNOOTTEE:: Sublists have their own mes‐
       sage  counter.  Adding  a sequence header from a sublists will give you
       the sublist message number which is different from the main  list  mes‐
       sage number.

       _d_i_r//pprreeffiixx  is  a subject prefix. If this file exists, its contents are
       prefixed to the subject of  the  post  in  the  outgoing  message.  The
       archived  message  is not processed. Attempts are made to not duplicate
       an existing prefix in replies.  Think twice before using  this  option.
       A  prefix  takes  unnecessary  space  on the subject line and most mail
       clients can easily filter on other headers, such as ’Mailing-List:’. If
       _d_i_r//pprreeffiixx  ccoonnttaaiinnss aa ssiinnggllee ’’##’’,, tthhiiss wwiillll bbee rreeppllaacceedd bbyy tthhee mmeessssaaggee
       number. The use of this feature is inadvisable  and  violates  internet
       mail  standards. However, it is very popular in e.g. Japan. If you must
       use this feature, make sure you are aware that you may be causing prob‐
       lems to users, sublists, etc.

       _d_i_r//tteexxtt//ttrraaiilleerr  is  a message trailer. If this file exists, it’s con‐
       tents are copied to the end of outgoing messages. Only lines terminated
       with new-line are copied.  No trailer is copied to the archived version
       of the message.

MMIISSCCEELLLLAANNYY
       If _d_i_r//lliissttiidd exists, ezmlm programs create a new LLiisstt--IIDD field,  show‐
       ing  the  contents  of  the first line of _d_i_r//lliissttiidd, in every outgoing
       message. The list-id should be unique and within name space  controlled
       by  the  owner.  It should remain constant even if lists move and be of
       the format

       List-ID: optional_text <unique_id.domain>

       This  header  would  result   from   a   _d_i_r//lliissttiidd   file   containing
       ‘‘optional_text     <unique_id.domain>’’.     See     RFC    2919    at
       _h_t_t_p_:_/_/_w_w_w_._i_e_t_f_._o_r_g_/_r_f_c_/_r_f_c_2_9_1_9_._t_x_t for more info.

       The first lines of _d_i_r//oouuttllooccaall and _d_i_r//oouutthhoosstt give the outgoing  name
       of  the mailing list.  These are used by eezzmmllmm--mmaannaaggee and eezzmmllmm--sseenndd to
       construct sender addresses for outgoing messages.

       If _d_i_r//ssuubblliisstt exists, this mailing list is a  sublist,  redistributing
       messages  from a parent mailing list.  The first line of _d_i_r//ssuubblliisstt is
       the name of the parent list.  This affects the behavior of  eezzmmllmm--sseenndd.

       If  _d_i_r//qqmmqqppsseerrvveerrss  exists,  eezzmmllmm--sseenndd  and eezzmmllmm--ggeett will use qqmmaaiill--
       qqmmqqppcc((11)) to send posts and digests. Other  mail  will  use  the  normal
       qmail  mechanism.   If  qqmmaaiill--qqmmqqppcc  is  modified  correctly, server IP
       addresses listed one per line in _d_i_r//qqmmqqppsseevveerrss will be tried in order,
       rather than the default servers specified in _/_v_a_r_/_q_m_a_i_l_/_c_o_n_t_r_o_l.

       If  _d_i_r//mmssggssiizzee  exists,  it  is  assumed to contain ‘‘max:min’’, where
       ‘‘max’’ is the maximum size in bytes of an acceptable message body, and
       ‘‘min’’  the corresponding minimal size. Either will be ignored if zero
       or omitted. If the eezzmmllmm--rreejjeecctt command line specifies the list  direc‐
       tory, messages not meeting the size criteria are rejected.

       If  _d_i_r//cchhaarrsseett  exists, the first line is assumed to represent a valid
       MIME character set, which is used for all outgoing MIME  messages  sent
       by  eezzmmllmm--ggeett  and  the  message moderation programs. The character set
       string may be suffixed with ’:’ and ’Q’ or ’B’  to  send  all  outgoing
       text  (ezmlm  messages,  digest table-of-contents, moderation requests,
       etc)  encoded  in  ‘‘Quoted-Printable’’  or  ‘‘base64’’  encoding.   By
       default,  no  encoding is done, which may result in the transmission of
       characters with the high bit set. When encoding is  specified,  trigger
       messages  and  other  parts of the reply that should not be encoded are
       sent as separate MIME parts.

       _d_i_r//lloocckk is an empty file.  Any program that reads or writes  the  sub‐
       scriber list, or adds messages to the archive, locks _d_i_r//lloocckk.

       _d_i_r//LLoogg  is an advisory log of subscription and unsubscription actions.
       WWAARRNNIINNGG:: LLoogg is not protected against system crashes.  Log entries  may
       be  missing or corrupted if the system goes down. There is Log for each
       of the accessory address databases as well. Thus, the  log  for  digest
       subscribers is _d_i_r//ddiiggeesstt//LLoogg.  If enabled, these logs can be retrieved
       by remote administrators (see eezzmmllmm--mmaannaaggee((11))).

       _d_i_r//ccooppyylliinneess specifies how many lines from the body  of  the  original
       request to copy into outgoing automatic responses.  If this file is not
       present or is empty, a value of _0 is used.  In  any  case,  the  entire
       header is copied.

       _d_i_r//ddiiggeesstt contains items specific for the digest list.

       _d_i_r//ddiiggeesstt//ssuubbssccrriibbeerrss   contains   hash  files  of  digest  subscriber
       addresses.

       _d_i_r//ddiiggeesstt//LLoogg,    _d_i_r//ddiiggeesstt//bboouunnccee,    _d_i_r//ddiiggeesstt//lloocckkbboouunnccee,     and
       _d_i_r//ddiiggeesstt//lloocckk  have functions for the digest list that mirror that of
       the corresponding files in _d_i_r.

       _d_i_r//ddiigghheeaaddeerrss may contain a list of headers to include in the "m" for‐
       mat  digests.   Headers should be listed one per line not including the
       colon.

       _d_i_r//ddiiggccoouunntt, _d_i_r//ddiiggssiizzee, and _d_i_r//ddiiggttiimmee  control  when  eezzmmllmm--ttssttddiigg
       will  allow  eezzmmllmm--ggeett  to  create  a  digest message.  _d_i_r//ttssttddiigg is a
       timestamp used temporarily by eezzmmllmm--ttssttddiigg to coordinate digesting.

       _d_i_r//aarrcchhnnuumm contains the number of the last message processed by eezzmmllmm--
       aarrcchhiivvee.   Normally,  eezzmmllmm--aarrcchhiivvee  will  process entries for messages
       from one above the contents of this file up to an including the message
       number  in _d_i_r//nnuumm.  The default ezmlmrc template sets up eezzmmllmm--aarrcchhiivvee
       to run only if the _d_i_r//tthhrreeaaddeedd file exists.

       If _d_i_r//nnoorreettuurrnnppoossttss exists,  eezzmmllmm--cclleeaann  will  not  return  timed-out
       posts to their senders.

       If  _d_i_r//nnoossuubbccoonnffiirrmm exists, eezzmmllmm--mmaannaaggee will not require confirmation
       from the subscription target  before  subscribing  it.   Similarly,  if
       _d_i_r//nnoouunnssuubbccoonnffiirrmm  exists,  eezzmmllmm--mmaannaaggee will not require confirmation
       from the unsubscription target before unsubscribing it.

       If _d_i_r//mmooddggeettoonnllyy exists,  eezzmmllmm--ggeett  will  only  allow  moderators  to
       retrieve  data  from  the  archive,  even  if  _d_i_r//ppuubblliicc  exists.   If
       _d_i_r//ssuubbggeettoonnllyy  exists,  eezzmmllmm--ggeett  will  only  allow  subscribers   to
       retrieve data from the archive.

       If _d_i_r//nnoowwaarrnn exists, no warnings of any kind are sent by eezzmmllmm--wwaarrnn.

       _d_i_r//kkeeyy is a binary file used to create confirmation codes.  Anyone who
       can guess the contents of  _d_i_r//kkeeyy  can  forge  subscription  requests.
       eezzmmllmm--mmaakkee  does  not  put much effort into making _d_i_r//kkeeyy difficult to
       guess; for better security, you should add some more secure random data
       to _d_i_r//kkeeyy.

       _d_i_r//ffllaaggss contains the option flags that were passed to eezzmmllmm--mmaakkee when
       the list was created or last edited.  It is used by programs that  gen‐
       erate  email  messages to select which sections in text messages should
       be output.  This is a new file introduced in version 5.  Prior to this,
       the  flags  were stored in the first line of the _d_i_r//ccoonnffiigg file, along
       with other data.

       _d_i_r//eezzmmllmmrrcc contains the path to the directory in  which  the  original
       eezzmmllmmrrcc  file was found.  It is used to create alternate paths for text
       files.

SSEEEE AALLSSOO
       ezmlm-archive(1),  ezmlm-check(1),  ezmlm-checksub(1),  ezmlm-clean(1),
       ezmlm-gate(1),   ezmlm-get(1),  ezmlm-idx(1),  ezmlm-issubn(1),  ezmlm-
       list(1),  ezmlm-make(1),  ezmlm-manage(1),  ezmlm-moderate(1),   ezmlm-
       request(1),   ezmlm-return(1),  ezmlm-send(1),  ezmlm-store(1),  ezmlm-
       sub(1), ezmlm-tstdig(1), ezmlm-unsub(1), ezmlm-warn(1),  ezmlm-weed(1),
       dot-qmail(5)



                                                                      ezmlm(5)
