ezmlm-test(1)                                                    ezmlm-test(1)



NNAAMMEE
       ezmlm-test - test ezmlm programs

SSYYNNOOPPSSIISS
       eezzmmllmm--tteesstt  [  --ss  _s_u_b_d_b  ] [ --hh _h_o_s_t ] [ --uu _u_s_e_r ] [ --ll _s_q_l_u_s_e_r ] [ --tt
       _s_q_l_t_a_b_l_e ] [ --dd _s_q_l_d_a_t_a_b_a_s_e ] [ --pp _s_q_l_p_a_s_s_w_o_r_d ]

DDEESSCCRRIIPPTTIIOONN
       eezzmmllmm--tteesstt is run from the ezmlm build directory. It will test most  of
       the  functions of most of the programs in ezmlm-idx. The program prints
       status and error messages to stdout. It requires that qmail runs on the
       host  and  that  mail  delivery to a local user functions. The invoking
       user should have read and execute permission to the files in the  build
       directory, and write permission in the current directory.

       For testing with an SQL database, a number of switches allow overriding
       the default connection information.

       eezzmmllmm--tteesstt creates a test list in the directory  ‘‘__TSTDIR’’  (in  the
       current directory). This directory and ‘‘dot.qmail-__tstlist*’’ will be
       overwritten/removed by the program.  In  addition,  the  file  ‘‘__TST‐
       DIR_err’’  is  created.  In cases of error, it often contains the error
       message from the failing program.

       eezzmmllmm--tteesstt should complete without error.  As many invocations  of  the
       programs  test  several functions it is not easy to determine what went
       wrong if eezzmmllmm--tteesstt fails. Usually, ‘‘__TSTDIR__err’’ gives some leads,
       but then debugging of the particular program is required. Usually, this
       involves recreating the failing  circumstances,  including  environment
       variables.

OOPPTTIIOONNSS
       --dd _s_q_l_d_a_t_a_b_a_s_e
              If SQL support is tested, use _s_q_l_d_a_t_a_b_a_s_e as the database, over‐
              riding the default ‘‘ezmlm’’. See --pp.

       --hh _h_o_s_t
              Connect to an SQL server on _h_o_s_t, if an  SQL  database  is  used
              (see  --pp).   Default  is empty, which for most database managers
              defaults to localhost/unix  socket.  To  specify  a  non-default
              port, add ‘‘:port’’ to the host name.

       --pp _s_q_l_p_a_s_s_w_o_r_d
              Test  with  SQL  support,  and use _s_q_l_p_a_s_s_w_o_r_d as the connection
              password. By  default,  local  databases,  rather  than  an  SQL
              database  are  used for testing. To use the SQL database with an
              empty password, specify --pp ’’’’.

       --ss _s_u_b_d_b
              Use the _s_u_b_d_b plugin for the subscriber databases.

       --tt _s_q_l_t_a_b_l_e
              Use _s_q_l_t_a_b_l_e as the table root name for the SQL database tables,
              if an SQL database is used (see --ss).  Default is ‘‘list’’.

       --uu _s_q_l_u_s_e_r
              Connect as _s_q_l_u_s_e_r to the SQL server, if an SQL database is used
              (see --pp).  Default is ‘‘eztest’’.

BBUUGGSS
       On some systems, some of the tests give a broken pipe  error.  This  is
       because  code needs to be added to the make_message function to capture
       error messages.  These errors can be safely ignored for now.

SSEEEE AALLSSOO
       ezmlm(5), ezmlm-clean(1),  ezmlm-gate(1),  ezmlm-get(1),  ezmlm-idx(1),
       ezmlm-issubn(1),  ezmlm-list(1), ezmlm-make(1), ezmlm-manage(1), ezmlm-
       moderate(1), ezmlm-request(1), ezmlm-return(1),  ezmlm-send(1),  ezmlm-
       split(1),   ezmlm-store(1),   ezmlm-sub(1),   ezmlm-tstdig(1),   ezmlm-
       unsub(1), ezmlm-warn(1)




                                                                 ezmlm-test(1)
